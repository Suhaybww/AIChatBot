generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String        @id
  email       String        @unique
  given_name  String?
  family_name String?
  picture     String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  sessions    ChatSession[]

  @@map("users")
}

model ChatSession {
  id        String    @id @default(cuid())
  title     String?
  userId    String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  messages  Message[]

  @@index([userId])
  @@index([createdAt])
  @@map("chat_sessions")
}

model Message {
  id        String      @id @default(cuid())
  content   String
  role      Role
  sessionId String
  createdAt DateTime    @default(now())
  session   ChatSession @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId])
  @@index([createdAt])
  @@map("messages")
}

model KnowledgeBase {
  id            String   @id @default(cuid())
  title         String
  content       String
  category      String
  sourceUrl     String   @map("source_url")
  tags          String[]
  priority      Int      @default(0)
  isActive      Boolean  @default(true) @map("is_active")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")
  structuredData Json?   @map("structured_data")
  chunkIndex    Int?     @map("chunk_index")
  totalChunks   Int?     @map("total_chunks")

  @@map("knowledge_base")
  @@index([category])
  @@index([isActive])
  @@index([priority])
}


enum Role {
  USER
  ASSISTANT
}
